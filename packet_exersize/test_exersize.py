import unittest
from parameterized import parameterized

from packet_exersize.exersize_main import (collect_unique_names, display_names, sort_courses_by_duration)

class TestsTask1(unittest.TestCase):
    @parameterized.expand(
        [
            (
                [
                    [
                        "Евгений Шмаргунов",
                        "Олег Булыгин",
                        "Дмитрий Демидов",
                        "Кирилл Табельский",
                        "Александр Ульянцев",
                        "Александр Бардин",
                        "Александр Иванов",
                        "Максим Филипенко",
                        "Елена Никитина",
                        "Азамат Искаков",
                        "Роман Гордиенко",
                    ],
                    [
                        "Филипп Воронов",
                        "Анна Юшина",
                        "Иван Бочаров",
                        "Анатолий Корсаков",
                        "Юрий Пеньков",
                        "Илья Сухачев",
                        "Иван Маркитан",
                        "Ринат Бибиков",
                        "Вадим Ерошевичев",
                        "Тимур Сейсембаев",
                        "Максим Батырев",
                        "Никита Шумский",
                    ],
                ],
                [
                    "Азамат",
                    "Александр",
                    "Анатолий",
                    "Анна",
                    "Вадим",
                    "Дмитрий",
                    "Евгений",
                    "Елена",
                    "Иван",
                    "Илья",
                    "Кирилл",
                    "Максим",
                    "Никита",
                    "Олег",
                    "Ринат",
                    "Роман",
                    "Тимур",
                    "Филипп",
                    "Юрий",
                ],
            ),
            (
                [
                    [
                        "Евгений Шмаргунов",
                        "Олег Булыгин",
                        "Дмитрий Демидов",
                        "Кирилл Табельский",
                        "Александр Ульянцев",
                        "Александр Бардин",
                        "Александр Иванов",
                        "Антон Солонилин",
                        "Максим Филипенко",
                        "Елена Никитина",
                        "Азамат Искаков",
                        "Роман Гордиенко",
                    ],
                    [],
                ],
                [
                    "Азамат",
                    "Александр",
                    "Антон",
                    "Дмитрий",
                    "Евгений",
                    "Елена",
                    "Кирилл",
                    "Максим",
                    "Олег",
                    "Роман",
                ],
            ),
            ([[], [], []], []),
            ([["1", "2", "3"], ["4", "5", "6"]], ["1", "2", "3", "4", "5", "6"]),
        ]
    )
    def test_by_collect_unique_names(self, mentors, expected):
        result = collect_unique_names(mentors)
        self.assertEqual(result, expected)

    @parameterized.expand(
        [
            (
                [
                    "Java-разработчик с нуля",
                    "Fullstack-разработчик на Python",
                    "Python-разработчик с нуля",
                    "Frontend-разработчик с нуля",
                ],
                [14, 14, 14, 14],
                [
                    ("Java-разработчик с нуля", 14),
                    ("Fullstack-разработчик на Python", 14),
                    ("Python-разработчик с нуля", 14),
                    ("Frontend-разработчик с нуля", 14),
                ],
            ),
            (
                [
                    "Java-разработчик с нуля",
                    "Fullstack-разработчик на Python",
                    "Python-разработчик с нуля",
                    "Frontend-разработчик с нуля",
                ],
                [14, 14, 14, 13],
                [
                    ("Frontend-разработчик с нуля", 13),
                    ("Java-разработчик с нуля", 14),
                    ("Fullstack-разработчик на Python", 14),
                    ("Python-разработчик с нуля", 14),
                ],
            ),
        ]
    )
    def test_by_sort_courses_by_duration(self, courses, durations, expected):
        result = sort_courses_by_duration(courses, durations)
        self.assertEqual(result, expected)

    @parameterized.expand(
        [
            (
                ["Java-разработчик с нуля", "Fullstack-разработчик на Python"],
                [
                    [
                        "Евгений Шмаргунов",
                        "Олег Булыгин",
                        "Дмитрий Демидов",
                        "Кирилл Табельский",
                        "Александр Ульянцев",
                        "Александр Бардин",
                        "Александр Иванов",
                        "Антон Солонилин",
                        "Максим Филипенко",
                        "Елена Никитина",
                        "Азамат Искаков",
                        "Роман Гордиенко",
                    ],
                    [
                        "Филипп Воронов",
                        "Анна Юшина",
                        "Иван Бочаров",
                        "Анатолий Корсаков",
                        "Юрий Пеньков",
                        "Илья Сухачев",
                        "Иван Маркитан",
                        "Ринат Бибиков",
                        "Вадим Ерошевичев",
                        "Тимур Сейсембаев",
                        "Максим Батырев",
                        "Никита Шумский",
                        "Алексей Степанов",
                        "Денис Коротков",
                        "Антон Глушков",
                        "Сергей Индюков",
                        "Максим Воронцов",
                        "Евгений Грязнов",
                        "Константин Виролайнен",
                        "Сергей Сердюк",
                        "Павел Дерендяев",
                    ],
                ],
                {
                    (
                        "Java-разработчик с нуля",
                        "Fullstack-разработчик на Python",
                    ): "Антон, Евгений, Максим"
                },
            ),
            (
                [
                    "Java-разработчик с нуля",
                    "Fullstack-разработчик на Python",
                    "Python-разработчик с нуля",
                    "Frontend-разработчик с нуля",
                    "Frontend-разработчик с нуля до middle",
                ],
                [
                    [
                        "Евгений Шмаргунов",
                        "Олег Булыгин",
                        "Дмитрий Демидов",
                        "Кирилл Табельский",
                        "Александр Ульянцев",
                        "Александр Бардин",
                        "Александр Иванов",
                        "Антон Солонилин",
                        "Максим Филипенко",
                        "Елена Никитина",
                        "Азамат Искаков",
                        "Роман Гордиенко",
                    ],
                    [
                        "Филипп Воронов",
                        "Анна Юшина",
                        "Иван Бочаров",
                        "Анатолий Корсаков",
                        "Юрий Пеньков",
                        "Илья Сухачев",
                        "Иван Маркитан",
                        "Ринат Бибиков",
                        "Вадим Ерошевичев",
                        "Тимур Сейсембаев",
                        "Максим Батырев",
                        "Никита Шумский",
                        "Алексей Степанов",
                        "Денис Коротков",
                        "Антон Глушков",
                        "Сергей Индюков",
                        "Максим Воронцов",
                        "Евгений Грязнов",
                        "Константин Виролайнен",
                        "Сергей Сердюк",
                        "Павел Дерендяев",
                    ],
                    [
                        "Евгений Шмаргунов",
                        "Олег Булыгин",
                        "Александр Бардин",
                        "Александр Иванов",
                        "Кирилл Табельский",
                        "Александр Ульянцев",
                        "Роман Гордиенко",
                        "Адилет Асканжоев",
                        "Александр Шлейко",
                        "Алена Батицкая",
                        "Денис Ежков",
                        "Владимир Чебукин",
                        "Эдгар Нуруллин",
                        "Евгений Шек",
                        "Максим Филипенко",
                        "Елена Никитина",
                    ],
                    [
                        "Владимир Чебукин",
                        "Эдгар Нуруллин",
                        "Евгений Шек",
                        "Валерий Хаслер",
                        "Татьяна Тен",
                        "Александр Фитискин",
                        "Александр Шлейко",
                        "Алена Батицкая",
                        "Александр Беспоясов",
                        "Денис Ежков",
                        "Николай Лопин",
                        "Михаил Ларченко",
                    ],
                    [
                        "Евгений Шмаргунов",
                        "Олег Булыгин",
                        "Александр Бардин",
                        "Александр Иванов",
                        "Кирилл Табельский",
                        "Александр Ульянцев",
                        "Роман Гордиенко",
                        "Адилет Асканжоев",
                        "Александр Шлейко",
                        "Алена Батицкая",
                        "Денис Ежков",
                        "Владимир Чебукин",
                        "Эдгар Нуруллин",
                        "Евгений Шек",
                        "Максим Филипенко",
                        "Елена Никитина",
                    ],
                ],
                {
                    (
                        "Java-разработчик с нуля",
                        "Fullstack-разработчик на Python",
                    ): "Антон, Евгений, Максим",
                    (
                        "Java-разработчик с нуля",
                        "Python-разработчик с нуля",
                    ): "Александр, Евгений, Елена, Кирилл, Максим, Олег, Роман",
                    (
                        "Java-разработчик с нуля",
                        "Frontend-разработчик с нуля",
                    ): "Александр, Евгений",
                    (
                        "Java-разработчик с нуля",
                        "Frontend-разработчик с нуля до middle",
                    ): "Александр, Евгений, Елена, Кирилл, Максим, Олег, Роман",
                    (
                        "Fullstack-разработчик на Python",
                        "Python-разработчик с нуля",
                    ): "Денис, Евгений, Максим",
                    (
                        "Fullstack-разработчик на Python",
                        "Frontend-разработчик с нуля",
                    ): "Денис, Евгений",
                    (
                        "Fullstack-разработчик на Python",
                        "Frontend-разработчик с нуля до middle",
                    ): "Денис, Евгений, Максим",
                    (
                        "Python-разработчик с нуля",
                        "Frontend-разработчик с нуля",
                    ): "Александр, Алена, Владимир, Денис, Евгений, Эдгар",
                    (
                        "Python-разработчик с нуля",
                        "Frontend-разработчик с нуля до middle",
                    ): "Адилет, Александр, Алена, Владимир, Денис, Евгений, Елена, Кирилл, Максим, Олег, Роман, Эдгар",
                    (
                        "Frontend-разработчик с нуля",
                        "Frontend-разработчик с нуля до middle",
                    ): "Александр, Алена, Владимир, Денис, Евгений, Эдгар",
                },
            ),
        ]
    )
    def test_by_display_names(self, courses, mentors, expected):
        result = display_names(courses, mentors)
        self.assertEqual(result, expected)


if __name__ == "__main__":
    unittest.main()
